patch-package
--- a/node_modules/graphql-request/dist/src/index.d.ts
+++ b/node_modules/graphql-request/dist/src/index.d.ts
@@ -1,6 +1,11 @@
 import { GraphQLError, Headers as HttpHeaders, Options, Variables } from './types';
 export { ClientError } from './types';
 import 'cross-fetch/polyfill';
+
+interface Headers {
+    [key: string]: string;
+}
+
 export declare class GraphQLClient {
     private url;
     private options;
--- a/node_modules/graphql-request/dist/src/types.d.ts
+++ b/node_modules/graphql-request/dist/src/types.d.ts
@@ -40,3 +40,25 @@ export declare class ClientError extends Error {
     constructor(response: GraphQLResponse, request: GraphQLRequestContext);
     private static extractMessage(response);
 }
+
+type RequestCache = "default" | "no-store" | "reload" | "no-cache" | "force-cache";
+type RequestCredentials = "omit" | "same-origin" | "include";
+type HeadersInit = Headers | string[][] | { [key: string]: string };
+type RequestMode = "navigate" | "same-origin" | "no-cors" | "cors";
+type RequestRedirect = "follow" | "error" | "manual";
+type ReferrerPolicy = "" | "no-referrer" | "no-referrer-when-downgrade" | "origin-only" | "origin-when-cross-origin" | "unsafe-url";
+
+interface RequestInit {
+    body?: any;
+    cache?: RequestCache;
+    credentials?: RequestCredentials;
+    headers?: HeadersInit;
+    integrity?: string;
+    keepalive?: boolean;
+    method?: string;
+    mode?: RequestMode;
+    redirect?: RequestRedirect;
+    referrer?: string;
+    referrerPolicy?: ReferrerPolicy;
+    window?: any;
+}
\ No newline at end of file
